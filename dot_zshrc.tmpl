# -*- shellscript -*-
#region powerlevel10k-instant-prompt
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
#endregion powerlevel10k-instant-prompt

#region zinit-installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

unalias zi zini zpl zplg
#endregion zinit-intaller

#region zinit-plugins
zinit lucid wait light-mode for \
    atload"_zsh_autosuggest_start" \
        zsh-users/zsh-autosuggestions \
    atinit"typeset -gA FAST_HIGHLIGHT; FAST_HIGHLIGHT[git-cmsg-len]=73; zicompinit; zicdreplay" \
        zdharma/fast-syntax-highlighting

# This plugin provides aliases for tmux and automatically start tmux
zinit wait lucid for \
    atclone"curl -sOL https://github.com/ohmyzsh/ohmyzsh/raw/master/plugins/tmux/tmux.extra.conf" \
    atload'unalias ta tad ts tl tksv tkss' \
        OMZP::tmux

# A collection of LS_COLORS definitions
zinit ice atclone"dircolors -b LS_COLORS > clrs.zsh" \
    atpull'%atclone' pick"clrs.zsh" nocompile'!' \
    atload'zstyle ":completion:*" list-colors “${(s.:.)LS_COLORS}”'
zinit light trapd00r/LS_COLORS

zinit ice depth=1; zinit light romkatv/powerlevel10k
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

## alternatives for GNU coreutils
# /bin/cat: A cat(1) clone with wings.
zinit ice as"command" from"gh-r" mv"bat*/bat -> bat" pick"bat"
zinit light sharkdp/bat
# /bin/ls: A modern replacement for 'ls'.
zinit ice as"command" from"gh-r" pick"bin/exa" mv"completions/*.zsh -> _exa"
zinit light ogham/exa
# /usr/bin/du: A more intuitive version of du in rust
zinit ice as"command" from"gh-r" mv"dust*unknown-linux-gnu/dust -> dust" pick"dust"
zinit light bootandy/dust
## alternatives for GNU findutils
# /usr/bin/find: A simple, fast and user-friendly alternative to 'find'
zinit ice as"command" from"gh-r" mv"fd* -> fd" bpick"*x86_64-unknown-linux-gnu*" pick"fd/fd"
zinit light sharkdp/fd
## alternative for GNU diffutils
# A viewer for git and diff output
zinit ice as"command" from"gh-r" mv"*x86_64-unknown-linux-gnu/delta -> delta" bpick"*x86_64-unknown-linux-gnu*" pick"delta"
zinit light dandavison/delta
## alternative for grep
# /bin/grep: ripgrep recursively searches directories for a regex pattern while respecting your gitignore
zinit ice as"command" from"gh-r" mv"ripgrep* -> ripgrep" pick"ripgrep/rg"
zinit light BurntSushi/ripgrep
## alternative for sed
# /bin/sed: Intuitive find & replace CLI (sed alternative)
zinit ice as"command" from"gh-r" mv"sd* -> sd" pick"sd"
zinit light chmln/sd
## alternative for procps
# /bin/ps: A modern replacement for ps written in Rust
zinit ice as"command" from"gh-r" bpick"*lnx*"
zinit light dalance/procs
## benchmarktools
# A command-line benchmarking tool
zinit ice as"command" from"gh-r" mv"hyperfine*/hyperfine -> hyperfine" pick"sharkdp/hyperfine"
zinit light sharkdp/hyperfine
# It's like curl -v, with graphs and colors
zinit ice as"command" cp"httpstat.sh -> httpstat" pick"httpstat"
zinit light b4b4r07/httpstat
# Simple command-line snippet manager, written in Go.
zinit ice as"command" from"gh-r" bpick"pet_*_linux_amd64.tar.gz" pick"pet"
zinit light knqyf263/pet
# Remote repository management made easy
zinit ice from"gh-r" as"command" pick"*/ghq"
zinit light x-motemen/ghq
## utilities
# A very fast implementation of tldr in Rust.
zinit ice as"command" from"gh-r" mv"tldr* -> tldr" pick"tldr"
zinit light dbrgn/tealdeer
# A command-line tool and library for generating regular expressions from user-provided test cases
zinit ice as"command" from"gh-r" pick"pemistahl/grex"
zinit light pemistahl/grex
# Remote repository management made easy
zinit ice from"gh-r" as"command" pick"*/ghq"
zinit light x-motemen/ghq
## completions
# A command-line fuzzy finder
zinit ice from"gh-r" as"command"
zinit light junegunn/fzf
zinit ice id-as"junegunn/fzf-tmux" as"command" pick"bin/fzf-tmux"
zinit light junegunn/fzf
zinit ice id-as"junegunn/fzf-completions" mv"shell/completion.zsh -> _fzf" src"shell/key-bindings.zsh" pick"/dev/null"
zinit light junegunn/fzf
# Replace zsh's default completion selection menu with fzf!
#zinit ice wait"1" lucid
#zinit light Aloxaf/fzf-tab
# enable cdr
autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs
mkdir -p "${XDG_CACHE_HOME:-$HOME/.cache}"
zstyle ':chpwd:*' recent-dirs-file "${XDG_CACHE_HOME:-$HOME/.cache}/chpwd-recent-dirs"
# peco/percol/fzf wrapper plugin for zsh
zinit light mollifier/anyframe
bindkey '^x^b' anyframe-widget-cdr
bindkey '^x^f' anyframe-widget-insert-filename
bindkey '^x^g' anyframe-widget-cd-ghq-repository
bindkey '^x^k' anyframe-widget-kill
bindkey '^x^r' anyframe-widget-put-history
zstyle ":anyframe:selector:" use fzf-tmux
#endregion zinit-plugins

#region alias
alias ls='ls --color=auto --file-type'
alias grep='grep --color=auto'
alias diff='diff --color=auto'
#endregion alias

#region hook
chpwd() ls
#endregion hook

#region changing_directories
setopt AUTO_CD
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
#endregion changing_directories

#region completion
setopt NO_AUTO_MENU               # 補完時に TAB キーで選択肢を移動しない
setopt LIST_PACKED                # 補完候補を表示する際に表示を詰める
#endregion completion

#region history
setopt APPEND_HISTORY             # zsh が終了した際に HISTFILE を置き換えるのではなく追記する
setopt EXTENDED_HISTORY           # HISTFILE にタイムスタンプを記録する
setopt HIST_EXPIRE_DUPS_FIRST     # 重複する履歴を削除してから保存する
setopt HIST_IGNORE_ALL_DUPS       # 履歴の内容と重複する行を履歴リストに追加しない
setopt HIST_IGNORE_SPACE          # 先頭がスペースで始まる行を履歴に追加しない
setopt HIST_LEX_WORDS             # クォートされた空白を正しく取り扱う
setopt HIST_NO_STORE              # history コマンドを履歴に追加しない
setopt HIST_REDUCE_BLANKS         # 履歴に追加する際に不要な空白を取り除く
setopt HIST_SAVE_NO_DUPS          # HISTFILE に重複する履歴を保存しない
setopt HIST_VERIFY                # 履歴補完した内容を即実行せず行エディタに読み込む
setopt SHARE_HISTORY              # 複数の zsh 間で HISTFILE を共有する
#endregion history

#region zle
setopt NO_BEEP                    # ビープ無効
#endregion zle

#region n-install
[[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"
#endregion n-install

#region pyenv
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init --path)"
fi
#endregion pyenv

#region pipx
if command -v pipx 1>/dev/null 2>&1; then
    autoload -U bashcompinit
    bashcompinit
    eval "$(register-python-argcomplete pipx)"
fi
#endregion pipx
