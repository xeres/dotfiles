#!/usr/bin/zsh

#region powerlevel10k-instant-prompt
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
#endregion powerlevel10k-instant-prompt

#region zi-installer
if [[ ! -f $HOME/.zi/bin/zi.zsh ]]; then
  print -P "%F{33}▓▒░ %F{160}Installing (%F{33}z-shell/zi%F{160})…%f"
  command mkdir -p "$HOME/.zi" && command chmod g-rwX "$HOME/.zi"
  command git clone -q --depth=1 --branch "main" https://github.com/z-shell/zi "$HOME/.zi/bin" && \
    print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
    print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zi/bin/zi.zsh"
autoload -Uz _zi
(( ${+_comps} )) && _comps[zi]=_zi

zicompinit
#endregion zi-installer

#region zi-plugins
if [ "$TERM_PROGRAM" != "vscode" ]; then
  zi wait lucid for \
    atinit'export ZSH_TMUX_AUTOSTART=true; export ZSH_TMUX_UNICODE=true' \
    atclone'curl -sOL https://github.com/ohmyzsh/ohmyzsh/raw/master/plugins/tmux/tmux.extra.conf' atpull'%atclone' \
    atload'unalias ta tad ts tl tksv tkss' \
      OMZP::tmux
fi

zi lucid wait light-mode for \
  atinit'typeset -gA FAST_HIGHLIGHT; FAST_HIGHLIGHT[git-cmsg-len]=73; zicompinit; zicdreplay' \
    z-shell/fast-syntax-highlighting \
  blockf \
    zsh-users/zsh-completions \
  atload'!_zsh_autosuggest_start' \
    zsh-users/zsh-autosuggestions

zi ice depth'1' atload"[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh" nocd
zi light romkatv/powerlevel10k

zi ice atclone'dircolors -b LS_COLORS > clrs.zsh' \
  atpull'%atclone' pick"clrs.zsh" nocompile'!' \
  atload'zstyle ":completion:*" list-colors "${(s.:.)LS_COLORS}"'
zi light trapd00r/LS_COLORS

zi ice as'program' from'gh-r' pick'bin/exa' mv'completions/*.zsh -> _exa'
zi light ogham/exa

zi ice src'asdf.sh' \
  atinit'export ASDF_DATA_DIR="$HOME/.local/share/asdf"'
zi light asdf-vm/asdf

zi id-as='asdf-direnv' nocompile \
  atclone'
    asdf plugin add direnv;
    asdf install direnv latest;
    asdf global direnv latest;
    asdf reshim direnv latest;
    direnv hook zsh > direnv.zsh;
    direnv allow "$HOME"' atpull'%atclone' \
  src'direnv.zsh' \
  for @z-shell/null

zi id-as='asdf-1password-cli' nocompile \
  atclone'
    asdf plugin add 1password-cli;
    asdf install 1password-cli 1.12.4;
    asdf global 1password-cli 1.12.4;
    asdf reshim 1password-cli 1.12.4' atpull'%atclone' \
  for @z-shell/null

zi ice as'program' from'gh-r' pick'git-credential-1password'
zi light develerik/git-credential-1password
#endregion zi-plugins

#region alias
if (( $+commands[exa] )); then
  alias ls='exa --header --time-style long-iso'
else
  alias ls='ls --color=auto --file-type --time-style long-iso'
fi
alias grep='grep --color=auto'
alias diff='diff --color=auto'
#endregion alias

#region hook
chpwd() ls
#endregion hook

#region changing_directories
setopt AUTO_CD
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
#endregion changing_directories

#region completion
setopt NO_AUTO_MENU               # 補完時に TAB キーで選択肢を移動しない
setopt LIST_PACKED                # 補完候補を表示する際に表示を詰める
#endregion completion

#region history
setopt APPEND_HISTORY             # zsh が終了した際に HISTFILE を置き換えるのではなく追記する
setopt EXTENDED_HISTORY           # HISTFILE にタイムスタンプを記録する
setopt HIST_EXPIRE_DUPS_FIRST     # 重複する履歴を削除してから保存する
setopt HIST_IGNORE_ALL_DUPS       # 履歴の内容と重複する行を履歴リストに追加しない
setopt HIST_IGNORE_SPACE          # 先頭がスペースで始まる行を履歴に追加しない
setopt HIST_LEX_WORDS             # クォートされた空白を正しく取り扱う
setopt HIST_NO_STORE              # history コマンドを履歴に追加しない
setopt HIST_REDUCE_BLANKS         # 履歴に追加する際に不要な空白を取り除く
setopt HIST_SAVE_NO_DUPS          # HISTFILE に重複する履歴を保存しない
setopt HIST_VERIFY                # 履歴補完した内容を即実行せず行エディタに読み込む
setopt SHARE_HISTORY              # 複数の zsh 間で HISTFILE を共有する
#endregion history

#region zle
setopt NO_BEEP                    # ビープ無効
#endregion zle
